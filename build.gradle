
import net.masterthought.cucumber.ReportBuilder

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.codehaus.gpars:gpars:1.2.1",
                "net.masterthought:cucumber-reporting:1.4.0"
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'groovy'

group 'com.sample.cucumber'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

/*task cleanReports() {
    File reportOutputDirectory = new File("target/cucumber-reports")
    reportOutputDirectory.deleteDir()
}*/

task cucumber() {
    dependsOn  assemble, compileTestJava
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'json:target/cucumber-reports/Cucumber.json','--plugin', 'pretty',
                    '--glue', 'com.sample.test', 'src/test/resources', '--tags', '@AddTest,@MultiplicationTest', '--threads', '2']

        }
        generateReport()
    }
}

task generateReportTask() {
    doLast {
        generateReport()
    }
}


def generateReport() {
    File reportOutputDirectory = new File("target/cucumber-reports/pretty")
    reportOutputDirectory.deleteDir()

    def jsonReports = fileTree(dir: "target/cucumber-reports").include '**/*.json'.toString()
    List<String> jsonReportFiles = new ArrayList<String>()
    jsonReports.each { File file ->
        jsonReportFiles.add("target/cucumber-reports/${file.name}".toString());
    }

    String projectName = "cucumber-test";
    boolean runWithJenkins = false;
    boolean parallelTesting = false;

    net.masterthought.cucumber.Configuration configuration = new net.masterthought.cucumber.Configuration(reportOutputDirectory, projectName);

    configuration.setParallelTesting(parallelTesting);
    configuration.setRunWithJenkins(runWithJenkins);
    configuration.setBuildNumber("19.1");
    ReportBuilder reportBuilder = new ReportBuilder(jsonReportFiles, configuration);
    reportBuilder.generateReports();
    println("\nReport available on: "+reportOutputDirectory.getCanonicalPath()+"/feature-overview.html")
}



dependencies {
    //compile("org.springframework.boot:spring-boot-starter-web")
    compile group: 'org.springframework', name: 'spring-context', version: '5.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-core', version: '5.2.0.RELEASE'

    testCompile group: 'net.masterthought', name: 'cucumber-reporting', version: '4.7.0'
    testCompile group: 'io.cucumber', name: 'cucumber-spring', version: '4.7.2'
    testCompile group: 'io.cucumber', name: 'cucumber-java', version: '4.7.2'
    testCompile group: 'io.cucumber', name: 'cucumber-junit', version: '4.7.2'
    //testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile group: 'org.springframework', name: 'spring-test', version: '5.2.0.RELEASE'

}
